@model List<Talent_Hunt.Models.Task>

@{
    ViewBag.Title = "Task List";
    var eventId = ViewBag.EventID;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

<style>
    .card {
        overflow: visible;
    }
</style>

<h2 class="mb-4 text-center text-primary fw-bold">Tasks for Event</h2>

@if (!Model?.Any() ?? true)
{
    <div class="alert alert-warning text-center shadow-sm">No tasks available for this event.</div>
}
else
{
    <div class="row">
        @foreach (var task in Model)
        {
            var editId = $"editForm_{task.Id}";
            var viewId = $"viewCard_{task.Id}";
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow border-0 rounded-4 position-relative">
                    <div id="@viewId">
                        @if (!string.IsNullOrEmpty(task.Image))
                        {
                            <img src="http://localhost/TalentHunt1/Images/@task.Image"
                                 class="card-img-top rounded-top-4" style="height: 220px; object-fit: cover;" alt="Task Image" />
                        }
                        else
                        {
                            <div class="card-img-top d-flex align-items-center justify-content-center bg-light rounded-top-4" style="height: 220px;">
                                <span class="text-muted">No Image</span>
                            </div>
                        }

                        <div class="card-body">
                            <h5 class="card-title">@task.Description</h5>
                            <p class="card-text text-secondary">
                                <i class="fas fa-clock me-1 text-info"></i>Start: @task.TaskStartTime<br />
                                <i class="fas fa-clock me-1 text-danger"></i>End: @task.TaskEndTime
                            </p>
                            <div class="d-flex justify-content-between">
                                <button class="btn btn-sm btn-outline-primary btn-edit" data-task-id="@task.Id">
                                    <i class="fas fa-edit me-1"></i>Edit
                                </button>
                                <button class="btn btn-sm btn-outline-danger btn-delete" data-task-id="@task.Id">
                                    <i class="fas fa-trash me-1"></i>Delete
                                </button>
                            </div>
                        </div>
                    </div>

                    <div id="@editId" style="display:none;">
                        @using (Html.BeginForm("UpdateTask", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.Hidden("Id", task.Id)
                            @Html.Hidden("EventID", task.EventID)

                            <div class="p-3">
                                <label class="form-label">Description</label>
                                <input type="text" name="Description" class="form-control mb-2" value="@task.Description" required />

                                <label class="form-label">Start Time</label>
                                <input type="text" name="TaskStartTime" class="form-control mb-2" value="@task.TaskStartTime" required />

                                <label class="form-label">End Time</label>
                                <input type="text" name="TaskEndTime" class="form-control mb-2" value="@task.TaskEndTime" required />

                                <label class="form-label">Image</label>
                                <input type="file" name="Image" class="form-control mb-3" />

                                @if (!string.IsNullOrEmpty(task.Image))
                                {
                                    <img src="http://localhost/TalentHunt1/Images/@task.Image"
                                         class="img-fluid mb-2 rounded" style="height: 100px; object-fit: cover;" />
                                }

                                <div class="d-flex">
                                    <button type="submit" class="btn btn-success btn-sm flex-fill me-2">Save</button>
                                    <button type="button" class="btn btn-secondary btn-sm flex-fill btn-cancel" data-task-id="@task.Id">Cancel</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="text-center mt-4">
        <a href="@Url.Action("CreateTask", "Admin", new { eventId = eventId })" class="btn btn-success rounded-pill px-4 py-2">
            <i class="fas fa-plus me-2"></i>Add New Task
        </a>
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this task?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" action="@Url.Action("DeleteTask", "Admin")">
                    <input type="hidden" name="TaskId" id="deleteTaskId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.btn-edit').forEach(btn => {
            btn.addEventListener('click', e => {
                const taskId = btn.getAttribute('data-task-id');
                toggleEdit(taskId, true);
            });
        });

        document.querySelectorAll('.btn-cancel').forEach(btn => {
            btn.addEventListener('click', e => {
                const taskId = btn.getAttribute('data-task-id');
                toggleEdit(taskId, false);
            });
        });

        document.querySelectorAll('.btn-delete').forEach(btn => {
            btn.addEventListener('click', e => {
                const taskId = btn.getAttribute('data-task-id');
                document.getElementById('deleteTaskId').value = taskId;
                const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
                deleteModal.show();
            });
        });

        function toggleEdit(taskId, showEdit) {
            const viewCard = document.getElementById('viewCard_' + taskId);
            const editForm = document.getElementById('editForm_' + taskId);
            if (showEdit) {
                viewCard.style.display = 'none';
                editForm.style.display = 'block';
            } else {
                viewCard.style.display = 'block';
                editForm.style.display = 'none';
            }
        }
    });
</script>
